{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNA,MAAM;AAAEA,EAAAA;AAAF,IAAwBC,EAAE,CAACC,MAAjC;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAeF,EAAE,CAACG,MAAxB;AAEAJ,iBAAiB,CAAC,kBAAD,EAAqB;AAClC;AACAK,EAAAA,KAAK,EAAE,eAF2B;AAGlCC,EAAAA,WAAW,EAAE,2CAHqB;AAIlCC,EAAAA,QAAQ,EAAE,MAJwB;AAKlCC,EAAAA,IAAI,EAAE,cAL4B;AAQlC;AACAC,EAAAA,UAAU,EAAE;AACRJ,IAAAA,KAAK,EAAE;AACHK,MAAAA,IAAI,EAAE,QADH;AAEHC,MAAAA,MAAM,EAAE,MAFL;AAGHC,MAAAA,QAAQ,EAAE;AAHP,KADC;AAMRC,IAAAA,IAAI,EAAE;AACFH,MAAAA,IAAI,EAAG,QADL;AAEFC,MAAAA,MAAM,EAAG,MAFP;AAGFC,MAAAA,QAAQ,EAAE;AAHR;AANE,GATsB;;AAuBlC;AAIA;AACAE,EAAAA,IAAI,OAAgC;AAAA,QAA/B;AAAEL,MAAAA,UAAF;AAAcM,MAAAA;AAAd,KAA+B;AAEhC,UAAM;AACFV,MAAAA,KADE;AAEFQ,MAAAA;AAFE,QAGFJ,UAHJ;;AAKA,aAASO,aAAT,CAAuBC,QAAvB,EAAiC;AAC7BF,MAAAA,aAAa,CAAC;AAAEV,QAAAA,KAAK,EAAEY;AAAT,OAAD,CAAb;AACH;;AAED,aAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC3BJ,MAAAA,aAAa,CAAC;AAAEF,QAAAA,IAAI,EAAEM;AAAR,OAAD,CAAb;AACH;;AAED,WAAQ,CACJ;AAAK,WAAK,EAAC;AAAX,OAEI,kEAAC,QAAD;AAAY,SAAG,EAAC,UAAhB;AACY,aAAO,EAAC,IADpB;AAEY,iBAAW,EAAG,gBAF1B;AAGY,WAAK,EAAGd,KAHpB;AAIY,cAAQ,EAAGW;AAJvB,MAFJ,EAQI,kEAAC,QAAD;AAAY,SAAG,EAAC,UAAhB;AACY,aAAO,EAAC,GADpB;AAEY,iBAAW,EAAG,sBAF1B;AAGY,WAAK,EAAGH,IAHpB;AAIY,cAAQ,EAAGK;AAJvB,MARJ,CADI,CAAR;AAiBH,GA5DiC;;AA+DlCE,EAAAA,IAAI,QAAe;AAAA,QAAd;AAACX,MAAAA;AAAD,KAAc;AAEf,UAAM;AACFJ,MAAAA,KADE;AAEFQ,MAAAA;AAFE,QAGFJ,UAHJ;AAMA,WACI;AAAK,WAAK,EAAC;AAAX,OACI,mFAAOJ,KAAP,MADJ,EAEI,kEAAC,QAAD,CAAU,OAAV;AAAoB,aAAO,EAAC,GAA5B;AACoB,WAAK,EAAEQ;AAD3B,MAFJ,CADJ;AAOH;;AA9EiC,CAArB,CAAjB,C","sources":["webpack://twentynineteen/external window [\"wp\",\"element\"]","webpack://twentynineteen/webpack/bootstrap","webpack://twentynineteen/webpack/runtime/compat get default export","webpack://twentynineteen/webpack/runtime/define property getters","webpack://twentynineteen/webpack/runtime/hasOwnProperty shorthand","webpack://twentynineteen/webpack/runtime/make namespace object","webpack://twentynineteen/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const { registerBlockType } = wp.blocks;\nconst { RichText } = wp.editor;\n\nregisterBlockType('david/custom-cta', {\n    //build-in attributes\n    title: 'Cal to Action', \n    description: 'Block to generate a custom Call to Action',\n    category: 'text',\n    icon: 'format-image',\n    \n\n    // custom attributes \n    attributes: {\n        title: {\n            type: 'string',\n            source: 'html',\n            selector: 'h2'\n        },\n        body: {\n            type : 'string',\n            source : 'html', \n            selector: 'p'\n        }\n    },\n\n\n    // custom functions \n\n\n\n    // build-in functions\n    edit({ attributes, setAttributes }) {\n\n        const {\n            title,\n            body\n        } = attributes;\n\n        function onChangeTitle(newTitle) {\n            setAttributes({ title: newTitle });\n        }\n\n        function onChangeBody(newBody) {\n            setAttributes({ body: newBody });\n        }\n\n        return ([ \n            <div class=\"cta-container\"> \n\n                <RichText   key=\"editable\"\n                            tagName=\"h2\"\n                            placeholder = \"Your CTA Title\"\n                            value={ title } \n                            onChange={ onChangeTitle} />\n\n                <RichText   key=\"editable\"\n                            tagName=\"p\"\n                            placeholder = \"Your CTA Description\"\n                            value={ body } \n                            onChange={ onChangeBody} />\n            \n            </div> \n        ]);\n    },\n\n\n    save({attributes}) {\n\n        const {\n            title,\n            body\n        } = attributes;\n\n\n        return (\n            <div class=\"cta-container\"> \n                <h2> { title } </h2>\n                <RichText.Content   tagName=\"p\"\n                                    value={body} />\n            </div>\n        );\n    }\n})"],"names":["registerBlockType","wp","blocks","RichText","editor","title","description","category","icon","attributes","type","source","selector","body","edit","setAttributes","onChangeTitle","newTitle","onChangeBody","newBody","save"],"sourceRoot":""}