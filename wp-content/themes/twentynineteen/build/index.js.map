{"version":3,"file":"index.js","mappings":"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","sources":["webpack://twentynineteen/external window [\"wp\",\"element\"]","webpack://twentynineteen/webpack/bootstrap","webpack://twentynineteen/webpack/runtime/compat get default export","webpack://twentynineteen/webpack/runtime/define property getters","webpack://twentynineteen/webpack/runtime/hasOwnProperty shorthand","webpack://twentynineteen/webpack/runtime/make namespace object","webpack://twentynineteen/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const { registerBlockType } = wp.blocks;\nconst { \n    RichText,\n    InspectorControls, \n    ColorPalette,\n    MediaUpload,\n    MediaUploadCheck\n} = wp.editor;\nconst { PanelBody, IconButton } = wp.components;\n\n\nregisterBlockType('david/custom-cta', {\n    //build-in attributes\n    title: 'Cal to Action', \n    description: 'Block to generate a custom Call to Action',\n    category: 'text',\n    icon: 'format-image',\n    \n\n    // custom attributes \n    attributes: {\n        title: {\n            type: 'string',\n            source: 'html',\n            selector: 'h2'\n        },\n        titleColor: {\n            type: 'string',\n            default: 'black'\n        },\n        body: {\n            type : 'string',\n            source : 'html', \n            selector: 'p'\n        },\n        bodyColor: {\n            type: 'string',\n            default: 'yellow'\n        },\n        backgroundImage: {\n            type: 'string',\n            default: null\n        }\n    },\n\n\n    // custom functions \n\n\n\n    // build-in functions\n    edit({ attributes, setAttributes }) {\n\n        const {\n            title,\n            body, \n            titleColor,\n            bodyColor,\n            backgroundImage\n        } = attributes;\n\n        function onChangeTitle(newTitle) {\n            setAttributes({ title: newTitle });\n        }\n\n        function onChangeBody(newBody) {\n            setAttributes({ body: newBody });\n        }\n\n        function onTitleColorChange(newColor) {\n            setAttributes({ titleColor: newColor });\n        }\n\n        function onBodyColorChange(newColor) {\n            setAttributes({ bodyColor: newColor });\n        }\n\n        function onSelectImageChange(newImage) {\n            setAttributes({ backgroundImage: newImage.sizes.full.url });\n        }\n\n        return ([ \n\n            <InspectorControls style={ { marginBottom: '40px'} } >\n                <PanelBody title={ 'Font Color Settings' } >\n                    <p><strong>Select a Title color:</strong></p>\n                    <ColorPalette value={titleColor} onChange= { onTitleColorChange } />\n                </PanelBody>\n                <PanelBody title={ 'Font Color Settings' } >\n                    <p><strong>Select a Body color:</strong></p>\n                    <ColorPalette value={bodyColor} onChange= { onBodyColorChange } />\n                </PanelBody>\n                <PanelBody title={ 'Background Image Settings' } >\n                    <p><strong>Select a background image:</strong></p>\n                    {/* <MediaUpload \n                        onSelect={ onSelectImageChange }\n                        type=\"image\"\n                        value={ backgroundImage }\n                        render={ ( { open } ) => {\n                            <IconButton \n                                onClick={ open }\n                                icon=\"upload\"\n                                className=\"editor-media-placeholder__button is-button is-default is-large\"\n                            >\n                                Background Image\n                            </IconButton>\n                        } }\n                    /> */}\n                    \t\t<MediaUploadCheck>\n\t\t\t<MediaUpload\n\t\t\t\tonSelect={ onSelectImageChange }\n\t\t\t\tallowedTypes=\"image\"\n\t\t\t\tvalue={ backgroundImage }\n\t\t\t\trender={ ( { open } ) => (\n                    <IconButton \n                    onClick={ open }\n                    icon=\"upload\"\n                    className=\"editor-media-placeholder__button is-button is-default is-large\"\n                >\n                    Background Image\n                </IconButton>\n\t\t\t\t) }\n\t\t\t/>\n\t\t</MediaUploadCheck>\n                </PanelBody>\n            </InspectorControls>,\n\n\n            <div class=\"cta-container\" style= {{\n                backgroundImage: `url(${backgroundImage})`,\n                backgroundSize: 'cover', \n                backgroundPosition: 'center',\n                backgroundRepeat: 'no-repeat'\n            }}>\n\n                <RichText   key=\"editable\"\n                            tagName=\"h2\"\n                            placeholder = \"Your CTA Title\"\n                            value={ title } \n                            onChange={ onChangeTitle} \n                            style={ { color: titleColor } }\n                            />\n\n                <RichText   key=\"editable\"\n                            tagName=\"p\"\n                            placeholder = \"Your CTA Description\"\n                            value={ body } \n                            onChange={ onChangeBody}\n                            style={ { color: bodyColor } } />\n            \n            </div> \n        ]);\n    },\n\n\n    save({attributes}) {\n\n        const {\n            title,\n            body,\n            titleColor,\n            bodyColor,\n            backgroundImage\n        } = attributes;\n\n\n        return (\n            <div class=\"cta-container\" style= {{\n                backgroundImage: `url(${backgroundImage})`,\n                backgroundSize: 'cover', \n                backgroundPosition: 'center',\n                backgroundRepeat: 'no-repeat'\n            }}> \n                <h2 style={ { color: titleColor } }> { title } </h2>\n                <RichText.Content   tagName=\"p\"\n                                    value={body}\n                                    style={ { color: bodyColor } } />\n            </div>\n        );\n    }\n})"],"names":["registerBlockType","wp","blocks","RichText","InspectorControls","ColorPalette","MediaUpload","MediaUploadCheck","editor","PanelBody","IconButton","components","title","description","category","icon","attributes","type","source","selector","titleColor","default","body","bodyColor","backgroundImage","edit","setAttributes","onChangeTitle","newTitle","onChangeBody","newBody","onTitleColorChange","newColor","onBodyColorChange","onSelectImageChange","newImage","sizes","full","url","marginBottom","open","backgroundSize","backgroundPosition","backgroundRepeat","color","save"],"sourceRoot":""}